.roundhistory {
  position: relative;
  display: grid;
  row-gap: 32px;
  grid-template-rows: auto auto 1fr;
}

.header {
  @extend %inner-header;
}

.choose {
  display: flex;
  flex-direction: column;
  row-gap: 16px;
  padding: 16px;
  border: 1px solid setcolor(blue, base);
  border-radius: 0.5rem;
  & p {
    text-align: center;
  }
}

.button {
  @extend %form-input-button;
  font-weight: 700;
  line-height: $h3-size;
  font-size: typesize($size-scale, "five");
}

.close {
  @extend %modal-close-button;
  margin-right: 0px;
}

.rounds {
  display: block
}

.course {
  @extend %dialog-success;
  &[open] {
    display: grid;
    row-gap: 16px;
    padding: 16px;
    width: 100vw;
  }
}

.warning{
  font-size: typesize($size-scale, "five");
  text-align: center;
  &-link {
    text-decoration: none;
    @extend %form-input-button;
    font-size: typesize($size-scale, "five");
    text-align: center;
  }
}

.stats {
  @extend %form-input-button;
  line-height: calc($h6-size * $scale);
  font-size: typesize($size-scale, "five");
  text-decoration: none;
  text-align: center;
  padding: 16px;
  border: 1px solid setcolor(blue, dark35);
  @extend %box-shadow;
}

.round {
  display: grid;
  grid-template-columns: .65fr 1fr;
  border-radius: 4px;
  border: 1px solid setcolor(green, dark45);
  @extend %box-shadow;
  &-header {
    grid-row: 1 / 2;
    grid-column: 1 / 3;
    display: flex;
    flex-direction: column;
    row-gap: 16px;
    padding: 16px;
    border-bottom: 1px solid setcolor(blue, dark25);
    background-color: rgba(setcolor(blue, base), 0.15);
    font-size: typesize($size-scale, "five");
    font-weight: 700;
    text-align: center;
    &-name {
      font-size: typesize($size-scale, "four");
    }
  }
  &-name {
    margin-top: 16px;
    padding-left: 16px;
    font-size: typesize($size-scale, "five");
  }
  &-score {
    grid-row: 2 / 3;
    grid-column: 1 / 2;
    margin-top: 16px;
    padding: 0px 16px 16px 16px;
    font-size: typesize($size-scale, "five");
  }
  &-arrow {
    grid-column: 2 / 3;
    font-size: typesize($size-scale, "zero");
    padding: 16px;
    height: fit-content;
    align-self: center;
    justify-self: center;
    width: 75%;
    border: 1px solid setcolor(blue, base);
    border-radius: 4px;
    background: setcolor(blue, light75);
    color: setcolor(green, dark15);
    font-weight: 700;
    @extend %box-shadow;
    &:active {
      background: linear-gradient(rgba(setcolor(blue, light25), 0.25), rgba(setcolor(blue, light15), 0.35));
    }
  }
  &-modal {
    @extend %dialog-success;
    &[open] {
      display: grid;
      position: relative;
      grid-template-rows: max-content max-content 1fr;
      padding: 0px;
    }
    &-header {
      @extend %modal-header;
      border-bottom: 1px solid setcolor(blue, base);
      color: setcolor(black, base);
      display: flex;
      flex-direction: column;
      row-gap: 16px;
      justify-content: space-between;
      & p:first-of-type {
        font-size: typesize($size-scale, "five");
      }
    }
    &-closing {
      @extend %modal-closing;
    }
    &-close {
      @extend %modal-close-button;
      &:active {
        background: linear-gradient(rgba(setcolor(blue, light25), 0.25), rgba(setcolor(blue, light15), 0.35));
      }
    }
    &-holes {
      display: grid;
      row-gap: 16px;
      padding: 16px 16px;
      color: setcolor(black, base);
      overflow-y: scroll;
      & div:last-of-type {
        margin-bottom: 64px;
      }
    }
    &-hole {
      display: grid;
      grid-template-columns: .65fr 1fr;
      grid-template-rows: 1fr 1fr 1fr 1fr;
      column-gap: 24px;
      align-items: center;
      padding: 16px;
      font-size: typesize($size-scale, "five");
      background-color: setcolor(white, light75);
      border-radius: 0.25rem;
      border: 1px solid setcolor(blue, base);
      & :nth-of-type(1) { // hole number
        grid-column: 1 / 2;
        grid-row: 1 / 2;
        align-self: center;
        font-size: typesize($size-scale, "five");
        font-weight: 700;
        justify-self: left;
      }
      & :nth-of-type(2) { // hole par
        grid-column: 1 / 2;
        grid-row: 2 / 3;
        padding: 8px 0px 8px 0px;
        border-radius: 8px;
        font-size: typesize($size-scale, "zero");
        justify-self: left;
      }
      & :nth-of-type(3) { // hole throws
        grid-column: 2 / 3;
        grid-row: 1 / 2;
        font-weight: 700;
        font-size: typesize($size-scale, "zero");
        text-align: left;
      }
      & :nth-of-type(4) { // hole score
        grid-column: 2 / 3;
        grid-row: 2 / 3;
        padding-bottom: 16px;
        border-bottom: 1px solid setcolor(blue, base);
        font-size: typesize($size-scale, "zero");
        text-align: left;
        font-weight: 700;
      }
      & :nth-of-type(5) { // round throws
        grid-column: 2 / 3;
        grid-row: 3 / 4;
        padding-top: 16px;
        font-size: typesize($size-scale, "minus-one");
        text-align: left;
      }
      & :nth-of-type(6) { // round score
        grid-column: 2 / 3;
        grid-row: 4 / 5;
        font-size: typesize($size-scale, "zero");
        text-align: left;
        font-weight: 700;
      }
    }
  }
}

.scroller-modal {
  @extend %scroller-modal;
  &-visible {
    @extend %scroller-modal-visible;
  }
}
// for dialogs
@keyframes show {
  from {
      opacity: 0;
  }
  to {
      opacity: 1;
  }
}

// for backdrop
@keyframes show {
  from {
      opacity: 0;
  }
  to {
      opacity: 1;
  }
}

